#!/bin/bash -e

# clean up any old environment
conda deactivate || echo "No environment to deactivate."
(yes | conda remove --name mypy --all) || echo "No mypy to remove."

# set up the mypy environment
(yes | conda create --name mypy python=3.7)
conda install -c stsci pyfits scipy
conda install -c anaconda mypy

cd ~/pdart || (echo "No ~/pdart/" && exit)
source activate mypy
# python3 -m pip install mypy-lang

# create expanded set of stubs
mkdir out || echo "out/ already exists"
stubgen --py2 \
    xml xml.dom xml.dom.minidom xml.etree xml.etree.ElementTree \
    # pyfits

# install it in the typeshed
MYPY_ENV=~/miniconda2/envs/mypy
TYPESHED=$MYPY_ENV/lib/mypy/typeshed
SQLITE3=$TYPESHED/stdlib/2/sqlite3
XML=$TYPESHED/stdlib/2/xml
rm -rf $XML
mv out/xml $TYPESHED/stdlib/2

    # Here we do fixes to mypy stubs that stubgen doesn't quite get
    # right.  Yes, it's ugly and not especially maintainable to do it
    # directly into the installed typeshed, but there seems to be a
    # bug in mypy that it won't see stubs installed in a stubs
    # directory for xml.dom if there are stubs for xml in typeshed, so
    # we've got to put them all into one place.  Better ideas would be
    # welcome.

    # remove a redundant parent class that fouls MRO
sed -e 's/class Comment(Childless, CharacterData)/class Comment(CharacterData)/' -i .bak $XML/dom/minidom.pyi

    # add a result type to Document.createTextNode
sed -e 's/def createTextNode(self, data): .../def createTextNode(self, data) -> Text: .../' -i .bak $XML/dom/minidom.pyi

    # copy a reexported function up from xml.dom.minidom to xml.dom
sed -e 's/from typing import Any/from typing import Any, Optional/' -i .bak $XML/dom/__init__.pyi
echo 'def getDOMImplementation(features: Optional[Any] = ...): ...' >> $XML/dom/__init__.pyi

    # fix a wrong result type in sqlite3 API
    sed -e 's/def iterdump(self, \*args, \*\*kwargs) -> None:/def iterdump(self, *args, **kwargs) -> str:/' -i .bak $SQLITE3/dbapi2.pyi

# let me know
say 'my pie is now set up'

# run it
./run-mypy

