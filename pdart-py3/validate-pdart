#!/bin/bash

BASE_DIR=${HOME}/pdart/pdart-py3
CONTEXT_PRODUCTS="${BASE_DIR}"/context-products.json
XMLDIR=${BASE_DIR}/xml
SCHEMAS="${XMLDIR}/PDS4_HST_1D00_1000.xsd.xml, ${XMLDIR}/PDS4_DISP_1B00.xsd.xml"
SCHEMATRONS="${XMLDIR}/PDS4_HST_1D00_1000.sch.xml, ${XMLDIR}/PDS4_DISP_1B00.sch.xml"

die(){
    echo $@ >&2
}

usage(){
    die Usage: "$(basename $0)" "<bundle-dir>" "<manifest-dir>" "<report-dir>"
}

if [ $# -ne 3 ]; then
    usage
    exit 1
fi

BUNDLE_DIR=$1
MANIFEST_DIR=$2
REPORT_DIR=$3
REPORT_FILEPATH="${REPORT_DIR}"/validation-report.txt

# NOTE: the -D is temporary until we have a tool to remove NaNs from
# data.

# NOTE: the --add-context line is also temporary until we have context
# products ready.
validate "${BUNDLE_DIR}" -M "${MANIFEST_DIR}"/checksum.manifest.txt -R pds4.bundle \
    -D \
    --add-context "${CONTEXT_PRODUCTS}" \
    -S ${SCHEMATRONS} -x ${SCHEMAS} \
    -r "${REPORT_FILEPATH}"

if [ ! -f "${REPORT_FILEPATH}" ]; then
    die A PDS4 validation report was not generated.
    exit 1
fi

# The validation tool returns a success error code even if the
# validation fails, so we have to kludge around that.
if grep -q FAIL "${REPORT_FILEPATH}"; then
    die Validation contains failures.
    exit 1
fi

exit 0
